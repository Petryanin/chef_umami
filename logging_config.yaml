version: 1
disable_existing_loggers: no

formatters:
    simple:
        (): colorlog.ColoredFormatter
        format: "{asctime} [{bold}{log_color}{levelname}{reset}]: ({bold}{blue}{filename}{reset}:{purple}{lineno}{reset}) {message}"
        style: "{"
        datefmt: "%Y-%m-%d %H:%M:%S"
        log_colors:
            DEBUG: cyan
            INFO: green
            WARNING: yellow
            ERROR: red
            CRITICAL: bold_red,bg_white
    verbose:
        (): colorlog.ColoredFormatter
        format: "{asctime} [{bold}{log_color}{levelname}{reset}]: ({thin_green}{name}{reset} in {cyan}{funcName}{reset} - {bold}{blue}{filename}{reset}:{purple}{lineno}{reset})  {message}"
        style: "{"
        datefmt: "%Y-%m-%d %H:%M:%S"
        log_colors:
            DEBUG: cyan
            INFO: green
            WARNING: yellow
            ERROR: red
            CRITICAL: bold_red,bg_white

handlers:
    console:
        class: logging.StreamHandler
        level: DEBUG
        formatter: verbose
        stream: ext://sys.stdout
    # file:
    #     class: logging.handlers.TimedRotatingFileHandler
    #     level: DEBUG
    #     formatter: verbose
    #     when: D
    #     backupCount: 0
    #     filename: ./logs/training-stats.log
    # uvicorn:
    #     class: logging.handlers.TimedRotatingFileHandler
    #     level: DEBUG
    #     formatter: verbose
    #     when: D
    #     backupCount: 0
    #     filename: ./logs/uvicorn.log

loggers:
    root:
        level: DEBUG
        handlers: [console]
    # app:
    #     level: DEBUG
    #     handlers: [file]
    #     propagate: yes
    #     qualname: app
    # uvicorn:
    #     level: INFO
    #     handlers: [uvicorn]
    #     propagate: yes
    #     qualname: uvicorn
